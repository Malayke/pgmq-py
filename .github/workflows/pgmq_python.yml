name: pgmq-python CI workflow

defaults:
  run:
    shell: bash
    working-directory: ./

on:
  pull_request:
    branches:
      - main
    paths:
      - ".github/workflows/pgmq_python.yml"
      - "src/**"
      - "tests/**"
      - "pyproject.toml"
  push:
    branches:
      - main
    paths:
      - ".github/workflows/pgmq_python.yml"
      - "src/**"
      - "tests/**"
      - "pyproject.toml"
jobs:
  lints:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.11.0
        uses: actions/setup-python@v6
        with:
          python-version: 3.11.0
      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"
      - name: Install project
        run: uv sync --all-groups
      - name: Lints / Type Checking
        run: make lint

  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.11.0
        uses: actions/setup-python@v6
        with:
          python-version: 3.11.0
      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"
      - name: Install project
        run: uv sync --all-groups --all-extras
      - name: Unit and Integration Tests
        run: make test

  publish:
    runs-on: ubuntu-latest
    # only publish off main branch
    if: github.repository == 'pgmq/pgmq-py' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.11.0
        uses: actions/setup-python@v6
        with:
          python-version: 3.11.0
      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"
      - name: Install project
        run: uv sync --all-groups
      - name: Publish
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}
        run: |
          uv publish
